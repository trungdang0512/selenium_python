{"name": "Verify that the newly added main parent page is positioned at the location specified as set with 'Displayed After' field of 'New Page' form on the main page bar 'Parent Page' dropped down menu", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=126.0.6478.185)\nStacktrace:\n\tGetHandleVerifier [0x00007FF72136EEB2+31554]\n\t(No symbol) [0x00007FF7212E7EE9]\n\t(No symbol) [0x00007FF7211A872A]\n\t(No symbol) [0x00007FF72117D995]\n\t(No symbol) [0x00007FF7212244D7]\n\t(No symbol) [0x00007FF72123C051]\n\t(No symbol) [0x00007FF72121CDD3]\n\t(No symbol) [0x00007FF7211EA33B]\n\t(No symbol) [0x00007FF7211EAED1]\n\tGetHandleVerifier [0x00007FF721678B2D+3217341]\n\tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\n\tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\n\tGetHandleVerifier [0x00007FF72141E786+750614]\n\t(No symbol) [0x00007FF7212F376F]\n\t(No symbol) [0x00007FF7212EEB24]\n\t(No symbol) [0x00007FF7212EECB2]\n\t(No symbol) [0x00007FF7212DE17F]\n\tBaseThreadInitThunk [0x00007FFC13A27374+20]\n\tRtlUserThreadStart [0x00007FFC1485CC91+33]", "trace": "self = <tests.test_DA_MP.test_DA_MP testMethod=test_DA_MP_TC013_1>\nuser_name = 'administrator', password = '', page1 = Page(), page2 = Page()\n\n    @allure.title(\"Verify that the newly added main parent page is positioned at the location specified as set with 'Displayed After' field of 'New Page' form on the main page bar 'Parent Page' dropped down menu\")\n    @data((\"administrator\", \"\", page1, page2))\n    @unpack\n    def test_DA_MP_TC013(self, user_name, password, page1, page2):\n>       self.login_page.login(user_name, password)\n\ntest_DA_MP.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\src\\page\\login_page.py:22: in login\n    self.txt_username.enter(username)\n..\\src\\automation\\element\\__init__.py:57: in enter\n    self.find_visible().send_keys(value)\n..\\src\\automation\\element\\__init__.py:45: in find_visible\n    return _waiter().until(condition.visibility_of_element_located(\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021F18EFB620>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF7212DE17F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC13A27374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC1485CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=126.0.6478.185)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF72136EEB2+31554]\nE       \t(No symbol) [0x00007FF7212E7EE9]\nE       \t(No symbol) [0x00007FF7211A872A]\nE       \t(No symbol) [0x00007FF72117D995]\nE       \t(No symbol) [0x00007FF7212244D7]\nE       \t(No symbol) [0x00007FF72123C051]\nE       \t(No symbol) [0x00007FF72121CDD3]\nE       \t(No symbol) [0x00007FF7211EA33B]\nE       \t(No symbol) [0x00007FF7211EAED1]\nE       \tGetHandleVerifier [0x00007FF721678B2D+3217341]\nE       \tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\nE       \tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\nE       \tGetHandleVerifier [0x00007FF72141E786+750614]\nE       \t(No symbol) [0x00007FF7212F376F]\nE       \t(No symbol) [0x00007FF7212EEB24]\nE       \t(No symbol) [0x00007FF7212EECB2]\nE       \t(No symbol) [0x00007FF7212DE17F]\nE       \tBaseThreadInitThunk [0x00007FFC13A27374+20]\nE       \tRtlUserThreadStart [0x00007FFC1485CC91+33]\n\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Login to system", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=126.0.6478.185)\nStacktrace:\n\tGetHandleVerifier [0x00007FF72136EEB2+31554]\n\t(No symbol) [0x00007FF7212E7EE9]\n\t(No symbol) [0x00007FF7211A872A]\n\t(No symbol) [0x00007FF72117D995]\n\t(No symbol) [0x00007FF7212244D7]\n\t(No symbol) [0x00007FF72123C051]\n\t(No symbol) [0x00007FF72121CDD3]\n\t(No symbol) [0x00007FF7211EA33B]\n\t(No symbol) [0x00007FF7211EAED1]\n\tGetHandleVerifier [0x00007FF721678B2D+3217341]\n\tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\n\tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\n\tGetHandleVerifier [0x00007FF72141E786+750614]\n\t(No symbol) [0x00007FF7212F376F]\n\t(No symbol) [0x00007FF7212EEB24]\n\t(No symbol) [0x00007FF7212EECB2]\n\t(No symbol) [0x00007FF7212DE17F]\n\tBaseThreadInitThunk [0x00007FFC13A27374+20]\n\tRtlUserThreadStart [0x00007FFC1485CC91+33]\n\n", "trace": "  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\page\\login_page.py\", line 22, in login\n    self.txt_username.enter(username)\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\automation\\element\\__init__.py\", line 57, in enter\n    self.find_visible().send_keys(value)\n    ^^^^^^^^^^^^^^^^^^^\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\automation\\element\\__init__.py\", line 45, in find_visible\n    return _waiter().until(condition.visibility_of_element_located(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "username", "value": "'administrator'"}, {"name": "password", "value": "''"}], "start": 1721990543577, "stop": 1721990543633}], "attachments": [{"name": "stdout", "source": "d3513172-ee36-4503-b8cc-74ab29772eb1-attachment.txt", "type": "text/plain"}], "start": 1721990543576, "stop": 1721990543675, "uuid": "4e2636c9-d0cc-43fa-b00a-a2f4c8256a10", "historyId": "bcf6d52931648b819b0d1c99ae87fa47", "testCaseId": "bcf6d52931648b819b0d1c99ae87fa47", "fullName": "tests.test_DA_MP.test_DA_MP#test_DA_MP_TC013_1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_DA_MP"}, {"name": "subSuite", "value": "test_DA_MP"}, {"name": "host", "value": "AGD14040"}, {"name": "thread", "value": "11164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_DA_MP"}]}