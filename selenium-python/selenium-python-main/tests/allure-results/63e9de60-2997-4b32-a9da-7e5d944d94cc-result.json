{"name": "Verify that user can remove any main parent page except 'Overview' page successfully and the order of pages stays persistent as long as there is not children page under it", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=126.0.6478.185)\nStacktrace:\n\tGetHandleVerifier [0x00007FF72136EEB2+31554]\n\t(No symbol) [0x00007FF7212E7EE9]\n\t(No symbol) [0x00007FF7211A8559]\n\t(No symbol) [0x00007FF7211F97C2]\n\t(No symbol) [0x00007FF7211EC151]\n\t(No symbol) [0x00007FF72121D02A]\n\t(No symbol) [0x00007FF7211EBA76]\n\t(No symbol) [0x00007FF72121D240]\n\t(No symbol) [0x00007FF72123C977]\n\t(No symbol) [0x00007FF72121CDD3]\n\t(No symbol) [0x00007FF7211EA33B]\n\t(No symbol) [0x00007FF7211EAED1]\n\tGetHandleVerifier [0x00007FF721678B2D+3217341]\n\tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\n\tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\n\tGetHandleVerifier [0x00007FF72141E786+750614]\n\t(No symbol) [0x00007FF7212F376F]\n\t(No symbol) [0x00007FF7212EEB24]\n\t(No symbol) [0x00007FF7212EECB2]\n\t(No symbol) [0x00007FF7212DE17F]\n\tBaseThreadInitThunk [0x00007FFC13A27374+20]\n\tRtlUserThreadStart [0x00007FFC1485CC91+33]", "trace": "self = <tests.test_DA_MP.test_DA_MP testMethod=test_DA_MP_TC017_1>\nuser_name = 'administrator', password = '', parent_page = Page()\nchild_page = Page()\n\n    @allure.title(\"Verify that user can remove any main parent page except 'Overview' page successfully and the order of pages stays persistent as long as there is not children page under it\")\n    @data((\"administrator\", \"\", parent_page, child_page))\n    @unpack\n    def test_DA_MP_TC017(self, user_name, password, parent_page, child_page):\n        self.login_page.login(user_name, password)\n        self.dashboard_page.select_global_setting_menu('Add Page')\n        self.create_new_page.create_new_page(parent_page)\n        self.dashboard_page.select_global_setting_menu('Add Page')\n        self.create_new_page.create_new_page(child_page)\n    \n        self.dashboard_page.open_page(parent_page)\n        self.dashboard_page.select_global_setting_menu(\"Delete\")\n        self.assertEqual(self.dashboard_page.get_alert_text(), \"Are you sure you want to remove this page?\")\n        self.dashboard_page.accept_alert()\n        self.assertEqual(self.dashboard_page.get_alert_text(), \"Cannot delete page '\" + parent_page.name + \"' since it has child page(s).\\n\")\n        self.dashboard_page.accept_alert()\n    \n>       self.dashboard_page.click_on_delete_link(child_page)\n\ntest_DA_MP.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\src\\page\\dashboard_page.py:67: in click_on_delete_link\n    self.open_page(page)\n..\\src\\page\\dashboard_page.py:54: in open_page\n    self.click_on_page(page)\n..\\src\\page\\dashboard_page.py:50: in click_on_page\n    pageOnMenuBar.click()\n..\\src\\automation\\element\\__init__.py:63: in click\n    self.find().click()\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021F19034C50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF7212DE17F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC13A27374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC1485CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=126.0.6478.185)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF72136EEB2+31554]\nE       \t(No symbol) [0x00007FF7212E7EE9]\nE       \t(No symbol) [0x00007FF7211A8559]\nE       \t(No symbol) [0x00007FF7211F97C2]\nE       \t(No symbol) [0x00007FF7211EC151]\nE       \t(No symbol) [0x00007FF72121D02A]\nE       \t(No symbol) [0x00007FF7211EBA76]\nE       \t(No symbol) [0x00007FF72121D240]\nE       \t(No symbol) [0x00007FF72123C977]\nE       \t(No symbol) [0x00007FF72121CDD3]\nE       \t(No symbol) [0x00007FF7211EA33B]\nE       \t(No symbol) [0x00007FF7211EAED1]\nE       \tGetHandleVerifier [0x00007FF721678B2D+3217341]\nE       \tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\nE       \tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\nE       \tGetHandleVerifier [0x00007FF72141E786+750614]\nE       \t(No symbol) [0x00007FF7212F376F]\nE       \t(No symbol) [0x00007FF7212EEB24]\nE       \t(No symbol) [0x00007FF7212EECB2]\nE       \t(No symbol) [0x00007FF7212DE17F]\nE       \tBaseThreadInitThunk [0x00007FFC13A27374+20]\nE       \tRtlUserThreadStart [0x00007FFC1485CC91+33]\n\nC:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "Login to system", "status": "passed", "parameters": [{"name": "username", "value": "'administrator'"}, {"name": "password", "value": "''"}], "start": 1721990568476, "stop": 1721990569044}, {"name": "Select Global Setting Menu", "status": "passed", "parameters": [{"name": "option", "value": "'Add Page'"}], "start": 1721990569044, "stop": 1721990577157}, {"name": "Create new Page ", "status": "passed", "parameters": [{"name": "page", "value": "Page()"}], "start": 1721990577158, "stop": 1721990578879}, {"name": "Select Global Setting Menu", "status": "passed", "parameters": [{"name": "option", "value": "'Add Page'"}], "start": 1721990578880, "stop": 1721990584104}, {"name": "Create new Page ", "status": "passed", "parameters": [{"name": "page", "value": "Page()"}], "start": 1721990584105, "stop": 1721990586564}, {"name": "Select Global Setting Menu", "status": "passed", "parameters": [{"name": "option", "value": "'Delete'"}], "start": 1721990591231, "stop": 1721990596725}, {"name": "Get Text On Alert Box", "status": "passed", "start": 1721990596726, "stop": 1721990596742}, {"name": "Accept The Alert", "status": "passed", "start": 1721990596743, "stop": 1721990596900}, {"name": "Get Text On Alert Box", "status": "passed", "start": 1721990596901, "stop": 1721990597051}, {"name": "Accept The Alert", "status": "passed", "start": 1721990597051, "stop": 1721990597131}, {"name": "Click on Delete link", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=126.0.6478.185)\nStacktrace:\n\tGetHandleVerifier [0x00007FF72136EEB2+31554]\n\t(No symbol) [0x00007FF7212E7EE9]\n\t(No symbol) [0x00007FF7211A8559]\n\t(No symbol) [0x00007FF7211F97C2]\n\t(No symbol) [0x00007FF7211EC151]\n\t(No symbol) [0x00007FF72121D02A]\n\t(No symbol) [0x00007FF7211EBA76]\n\t(No symbol) [0x00007FF72121D240]\n\t(No symbol) [0x00007FF72123C977]\n\t(No symbol) [0x00007FF72121CDD3]\n\t(No symbol) [0x00007FF7211EA33B]\n\t(No symbol) [0x00007FF7211EAED1]\n\tGetHandleVerifier [0x00007FF721678B2D+3217341]\n\tGetHandleVerifier [0x00007FF7216C5AF3+3532675]\n\tGetHandleVerifier [0x00007FF7216BB0F0+3489152]\n\tGetHandleVerifier [0x00007FF72141E786+750614]\n\t(No symbol) [0x00007FF7212F376F]\n\t(No symbol) [0x00007FF7212EEB24]\n\t(No symbol) [0x00007FF7212EECB2]\n\t(No symbol) [0x00007FF7212DE17F]\n\tBaseThreadInitThunk [0x00007FFC13A27374+20]\n\tRtlUserThreadStart [0x00007FFC1485CC91+33]\n\n", "trace": "  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\page\\dashboard_page.py\", line 67, in click_on_delete_link\n    self.open_page(page)\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\page\\dashboard_page.py\", line 54, in open_page\n    self.click_on_page(page)\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\page\\dashboard_page.py\", line 50, in click_on_page\n    pageOnMenuBar.click()\n  File \"G:\\selenium_python\\selenium-python\\selenium-python-main\\src\\automation\\element\\__init__.py\", line 63, in click\n    self.find().click()\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\trung.dang\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "page", "value": "Page()"}], "start": 1721990597131, "stop": 1721990605790}], "attachments": [{"name": "stdout", "source": "070ad9f5-f1d1-4711-8d0c-db2e1ed30c72-attachment.txt", "type": "text/plain"}], "start": 1721990568476, "stop": 1721990605795, "uuid": "6bddd929-5475-45bb-8196-9cd98d902b30", "historyId": "c11c65e0b8f565de7c1f1bddbebe76f4", "testCaseId": "c11c65e0b8f565de7c1f1bddbebe76f4", "fullName": "tests.test_DA_MP.test_DA_MP#test_DA_MP_TC017_1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_DA_MP"}, {"name": "subSuite", "value": "test_DA_MP"}, {"name": "host", "value": "AGD14040"}, {"name": "thread", "value": "11164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_DA_MP"}]}